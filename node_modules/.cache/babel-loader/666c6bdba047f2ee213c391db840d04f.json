{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bryan/Escritorio/Cursos/React/clima/src/components/Clima.js\";\nimport React from 'react';\n\nconst Clima = ({\n  resultado\n}) => {\n  //Extraer los valores\n  const {\n    name,\n    main\n  } = resultado;\n  if (!name) return null; //Se debe de poner para evitar que se ejecute el componente , de esta forma no se cae la aplicación\n  //Grados kelvin\n\n  const kelvin = 273.15;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-panel white col s12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"El clima de \", name, \" es: \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"temperatura\",\n        children: [parseFloat(main.temp - kelvin, 10).toFixed(2), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" \\u2103 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 91\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Clima;\nexport default Clima;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clima\");","map":{"version":3,"sources":["/home/bryan/Escritorio/Cursos/React/clima/src/components/Clima.js"],"names":["React","Clima","resultado","name","main","kelvin","parseFloat","temp","toFixed"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAE3B;AAEA,QAAK;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAYF,SAAjB;AAEA,MAAG,CAACC,IAAJ,EAAU,OAAO,IAAP,CANiB,CAMJ;AAEvB;;AAEA,QAAME,MAAM,GAAC,MAAb;AAEA,sBAEI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAA,mCAAiBF,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,mBAA4BG,UAAU,CAACF,IAAI,CAACG,IAAL,GAAYF,MAAb,EAAoB,EAApB,CAAV,CAAkCG,OAAlC,CAA0C,CAA1C,CAA5B,oBAA0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAUH,CAtBD;;KAAMP,K;AAwBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\nconst Clima = ({resultado}) => {\n\n    //Extraer los valores\n\n    const{name,main}=resultado;\n\n    if(!name) return null; //Se debe de poner para evitar que se ejecute el componente , de esta forma no se cae la aplicación\n\n    //Grados kelvin\n\n    const kelvin=273.15;\n\n    return (\n\n        <div className=\"card-panel white col s12\">\n            <div className=\"black-text\">\n                <h2>El clima de {name} es: </h2>\n                <p className=\"temperatura\">{parseFloat(main.temp - kelvin,10).toFixed(2)} <span> &#x2103; </span></p>\n            </div> \n        </div>\n\n      );\n}\n \nexport default Clima;"]},"metadata":{},"sourceType":"module"}